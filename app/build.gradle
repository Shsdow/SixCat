apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // kapt 插件

def static releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}


android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        resConfigs "es"
    }

    signingConfigs {
        release {
            storeFile file('./sixcat.jks')
            storePassword 'sexcat'
            keyAlias 'sixcat'
            keyPassword 'sexcat'
        }
//        debug {
//            storeFile file('./sixcat.jks')
//            storePassword 'sexcat'
//            keyAlias 'sixcat'
//            keyPassword 'sexcat'
//        }
    }



    flavorDimensions "sixcat"
    productFlavors {
        up {
//            dimension "sixcat"
//            minSdkVersion 24
//            applicationId 'com.six.cat.sixcat'
//            signingConfig signingConfigs.Release
        }

        down {
            dimension "sixcat"
            minSdkVersion 23
//            applicationId 'com.six.cat.sixcat'
//            signingConfig signingConfigs.Release
        }
    }

    lintOptions {
        abortOnError false

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为SixCat_release_v0.1_2017-12-04.apk
                        def fileName = "SixCat_release_v${defaultConfig.versionName}_${releaseTime()}.apk"
                        outputFileName = fileName
                    }
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation rootProject.ext.dependencies["support-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["palette"]
    implementation rootProject.ext.dependencies["constraint"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxbinding2"]
    implementation rootProject.ext.dependencies["rxjavadebug"]
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    implementation rootProject.ext.dependencies["rxpermissions"]
    implementation rootProject.ext.dependencies["rxpermissions"]
    implementation rootProject.ext.dependencies["okhttp3"]
    debugImplementation rootProject.ext.dependencies["logging-interceptor"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["stetho"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
    implementation rootProject.ext.dependencies["butterknife"]
    kapt rootProject.ext.dependencies["butterknife-compiler"]
//    implementation rootProject.ext.dependencies["statusbarutil"]
    implementation rootProject.ext.dependencies["slidableactivity"]
    implementation rootProject.ext.dependencies["material-dialogs"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["expandableTextView"]
    implementation rootProject.ext.dependencies["ultra-ptr"]
    implementation rootProject.ext.dependencies["lottie"]
    implementation rootProject.ext.dependencies["videoplayer"]
    implementation rootProject.ext.dependencies["permissionsDispatcher"]
    kapt "com.github.hotchemi:permissionsdispatcher-processor:3.2.0"
//    kapt rootProject.ext.dependencies["permissionsDispatcherKapt"]
}
