apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt' // kapt 插件
apply plugin: 'io.fabric'
apply plugin: 'com.alibaba.arouter' // ARouter

def static releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resConfigs "es"

        //ARouter 配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }


    signingConfigs {
        release {
            storeFile file('./sixcat.jks')
            storePassword 'sexcat'
            keyAlias 'sixcat'
            keyPassword 'sexcat'
        }
        debug {
//            storeFile file('./sixcat.jks')
//            storePassword 'sexcat'
//            keyAlias 'sixcat'
//            keyPassword 'sexcat'
        }
    }


    flavorDimensions "sixcat"
    productFlavors {
    }

    lintOptions {
        abortOnError false

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    configurations {
        all*.exclude group: 'com.android.support', module: 'support-v13'
        all*.exclude group: 'com.android.support', module: 'support-v4'
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation rootProject.ext.dependencies["support-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["palette"]
    implementation rootProject.ext.dependencies["constraint"]
    implementation rootProject.ext.dependencies["cardview"]
    implementation rootProject.ext.dependencies["retrofit2"]
    implementation rootProject.ext.dependencies["converter-gson"]
    implementation rootProject.ext.dependencies["adapter-rxjava2"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["rxbinding2"]
    implementation rootProject.ext.dependencies["rxjavadebug"]
    implementation rootProject.ext.dependencies["rxlifecycle"]
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    implementation rootProject.ext.dependencies["rxpermissions"]
//    implementation rootProject.ext.dependencies["rxpermissions"]
    implementation rootProject.ext.dependencies["okhttp3"]
    debugImplementation rootProject.ext.dependencies["logging-interceptor"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["stetho"]
    debugImplementation rootProject.ext.dependencies["leakcanary-android"]
    releaseImplementation rootProject.ext.dependencies["leakcanary-android-no-op"]
//    implementation rootProject.ext.dependencies["butterknife"]
//    kapt rootProject.ext.dependencies["butterknife-compiler"]
//    implementation rootProject.ext.dependencies["statusbarutil"]
    implementation rootProject.ext.dependencies["slidableactivity"]
    implementation rootProject.ext.dependencies["material-dialogs"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    implementation rootProject.ext.dependencies["expandableTextView"]
    implementation rootProject.ext.dependencies["ultra-ptr"]
    implementation rootProject.ext.dependencies["lottie"]
    implementation rootProject.ext.dependencies["videoplayer"]
    implementation rootProject.ext.dependencies["permissionsDispatcher"]
    kapt rootProject.ext.dependencies["permissions-kapt"]
    api rootProject.ext.dependencies["arouter"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["logger"]
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true;
    }

    //Room
    kapt rootProject.ext.dependencies["room-kapt"]
    implementation rootProject.ext.dependencies["room"]
    //room
    implementation rootProject.ext.dependencies["work"]


}
